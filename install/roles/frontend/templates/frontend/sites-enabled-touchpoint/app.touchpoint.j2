{% if frontend_domain | length > 1 or frontend_https_enabled %}
server {
    listen  80;
{% if frontend_domain | length > 1 %} 
    server_name
{% for domain in frontend_domain[1:] %}
        app.{{ domain }}    www.app.{{ domain }}
{% endfor %}
    ;  
{% else %}
    server_name app.{{ frontend_domain[0] }} www.app.{{ frontend_domain[0] }};
{% endif %}
    location / {
        return 302 {{ frontend_scheme }}://app.{{ frontend_domain[0] }}$request_uri;
    }
{% if frontend_certbot %}
    include /etc/nginx/letsencrypt.conf;
{% endif %}
}
{% endif %}

server {
{% if frontend_https_enabled %}
    listen  443 ssl;
{% if frontend_certbot %}
    ssl_certificate         /letsencrypt/live/{{ frontend_domain[0] }}/fullchain.pem;
    ssl_certificate_key     /letsencrypt/live/{{ frontend_domain[0] }}/privkey.pem;
{% else %}
    ssl_certificate         /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key     /etc/nginx/certs/privkey.pem;
{% endif %}
{% else %}
    listen  80;
{% if frontend_certbot %}
    include /etc/nginx/letsencrypt.conf;
{% endif %}
{% endif %}
    server_name  
        app.{{ frontend_domain[0] }}
    ;  

    set $root {{ frontend_root_dir }};

    root $root;

    proxy_http_version 1.1;

    location / {
         gzip_static on;
         try_files $uri /index.html =404;
         add_header Cache-Control "must-revalidate";
    }


    location = /favicon.ico {
        try_files {{ frontend_ico_path }} =404;
        add_header Cache-Control "must-revalidate";
    }


    #Вебсокет для бэкенда
    location /api/events {
        proxy_pass http://{{ host.plexus_server }}:{{ ports.plexus_server_main }}/events;
        proxy_http_version 1.1;
        proxy_set_header Upgrade "websocket";
        proxy_set_header Connection "Upgrade";

        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        Host $http_host;

        add_header X-Request-Time $request_time;

{% if frontend_https_enabled or reverse_proxy %}
        proxy_cookie_path / "/; secure; HttpOnly; SameSite=None";
{% endif %}
        proxy_cookie_domain ~.* .{{ frontend_domain[0] }};

        proxy_read_timeout 700s;
    }


    # Бекенд для сайта
    location /api/ {
        proxy_pass              http://{{ host.plexus_server }}:{{ ports.plexus_server_main }}/;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header       Host $http_host;

        add_header X-Request-Time $request_time;

{% if frontend_https_enabled or reverse_proxy %}
        proxy_cookie_path / "/; secure; HttpOnly; SameSite=None";
{% endif %}
        proxy_cookie_domain ~.* .{{ frontend_domain[0] }};
    }

    location /static/report/ {
        proxy_pass              http://{{ host.plexus_reports }}:{{ ports.plexus_reports_main }}/static/report/;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        Host $http_host;

        add_header X-Request-Time $request_time;

{% if frontend_https_enabled or reverse_proxy %}
        proxy_cookie_path / "/; secure; HttpOnly; SameSite=None";
{% endif %}
        proxy_cookie_domain ~.* .{{ frontend_domain[0] }};
    }

    location /storage/contents {

        proxy_pass              http://{{ host.plexus_server }}:{{ ports.plexus_server_main }}/storage/contents;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        Host $http_host;
        
        add_header X-Request-Time $request_time;
        add_header Cache-Control 'no-cache, no-store, must-revalidate';

{% if frontend_https_enabled or reverse_proxy %}
        proxy_cookie_path / "/; secure; HttpOnly; SameSite=None";
{% endif %}
        proxy_cookie_domain ~.* .{{ frontend_domain[0] }};

        proxy_intercept_errors on;
        error_page 401 =302 https://app.{{ frontend_domain[0] }};
    }

    location /api/internal {
        return 301 https://app.{{ frontend_domain[0] }};
    }

}
